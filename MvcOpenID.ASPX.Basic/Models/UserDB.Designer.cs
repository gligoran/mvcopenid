//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MvcOpenID.ASPX.Basic", "FK_UserOpenId", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MvcOpenID.ASPX.Basic.Models.User), "OpenIds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcOpenID.ASPX.Basic.Models.OpenId), true)]

#endregion

namespace MvcOpenID.ASPX.Basic.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UserContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UserContext object using the connection string found in the 'UserContext' section of the application configuration file.
        /// </summary>
        public UserContext() : base("name=UserContext", "UserContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UserContext object.
        /// </summary>
        public UserContext(string connectionString) : base(connectionString, "UserContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UserContext object.
        /// </summary>
        public UserContext(EntityConnection connection) : base(connection, "UserContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpenId> OpenIds
        {
            get
            {
                if ((_OpenIds == null))
                {
                    _OpenIds = base.CreateObjectSet<OpenId>("OpenIds");
                }
                return _OpenIds;
            }
        }
        private ObjectSet<OpenId> _OpenIds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpenIds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpenIds(OpenId openId)
        {
            base.AddObject("OpenIds", openId);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcOpenID.ASPX.Basic", Name="OpenId")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpenId : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpenId object.
        /// </summary>
        /// <param name="openIdId">Initial value of the OpenIdId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="openIdUrl">Initial value of the OpenIdUrl property.</param>
        public static OpenId CreateOpenId(global::System.Int32 openIdId, global::System.Int32 userId, global::System.String openIdUrl)
        {
            OpenId openId = new OpenId();
            openId.OpenIdId = openIdId;
            openId.UserId = userId;
            openId.OpenIdUrl = openIdUrl;
            return openId;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpenIdId
        {
            get
            {
                return _OpenIdId;
            }
            set
            {
                if (_OpenIdId != value)
                {
                    OnOpenIdIdChanging(value);
                    ReportPropertyChanging("OpenIdId");
                    _OpenIdId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OpenIdId");
                    OnOpenIdIdChanged();
                }
            }
        }
        private global::System.Int32 _OpenIdId;
        partial void OnOpenIdIdChanging(global::System.Int32 value);
        partial void OnOpenIdIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpenIdUrl
        {
            get
            {
                return _OpenIdUrl;
            }
            set
            {
                OnOpenIdUrlChanging(value);
                ReportPropertyChanging("OpenIdUrl");
                _OpenIdUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpenIdUrl");
                OnOpenIdUrlChanged();
            }
        }
        private global::System.String _OpenIdUrl;
        partial void OnOpenIdUrlChanging(global::System.String value);
        partial void OnOpenIdUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcOpenID.ASPX.Basic", "FK_UserOpenId", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MvcOpenID.ASPX.Basic.FK_UserOpenId", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MvcOpenID.ASPX.Basic.FK_UserOpenId", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MvcOpenID.ASPX.Basic.FK_UserOpenId", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MvcOpenID.ASPX.Basic.FK_UserOpenId", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcOpenID.ASPX.Basic", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String username, global::System.String email, global::System.String fullName)
        {
            User user = new User();
            user.UserId = userId;
            user.Username = username;
            user.Email = email;
            user.FullName = fullName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcOpenID.ASPX.Basic", "FK_UserOpenId", "OpenIds")]
        public EntityCollection<OpenId> OpenIds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpenId>("MvcOpenID.ASPX.Basic.FK_UserOpenId", "OpenIds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpenId>("MvcOpenID.ASPX.Basic.FK_UserOpenId", "OpenIds", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
